-- import: fastn

-- fastn.package: todayhasbeen-dotcom.fifthtry.site
favicon: /favicon.ico

-- fastn.dependency: todayhasbeen-ui.fifthtry.site
-- fastn.dependency: design-system.fifthtry.site
-- fastn.dependency: svg-icons.fifthtry.site
-- fastn.dependency: roboto-typography.fifthtry.site

-- fastn.auto-import: todayhasbeen-ui.fifthtry.site/ds




-- fastn.url-mappings:

/stripe/v0.1/* -> wasm+proxy://thb_stripe.wasm/*
/api/v0.1/* -> wasm+proxy://backend.wasm/*
/login/* -> wasm+proxy://backend.wasm/login/*




-- fastn.sitemap:

# Subscription Status: /subscription/payment/
document: payment-status.ftd



-- fastn.migration: remove_customer_id_for_unsubscribed_user

UPDATE users
SET customer_id = NULL
WHERE subscription_type IS NULL;


-- fastn.migration: new_subscription_plans

CREATE TABLE new_subscription_plans (
    id INTEGER PRIMARY KEY,
    plan TEXT NOT NULL,
    price_id TEXT NOT NULL,
    amount REAL NOT NULL,
    interval TEXT NOT NULL,
    trial_period_days INTEGER,
    discount TEXT,
    created_on INTEGER NOT NULL
) STRICT;

INSERT INTO new_subscription_plans (plan, price_id, amount, interval, trial_period_days, discount, created_on) VALUES
('Annual', 'price_1OZVafE432GCeRPXuzc0DOnm', 48, 'year', 14, '20%', 1719389577725201000),
('Monthly', 'price_1OZVafE432GCeRPX6Ly6yzjJ', 5, 'month', 7, NULL, 1719389577725201000);

DROP TABLE subscription_plans;

ALTER TABLE new_subscription_plans RENAME TO subscription_plans;



-- fastn.migration: update-plans

UPDATE subscription_plans
SET plan = 'Annual'
WHERE plan = 'Annual Sub';

UPDATE subscription_plans
SET plan = 'Monthly'
WHERE plan = 'Monthly Subscription';

UPDATE users
SET subscription_type = 'Annual'
WHERE subscription_type = 'Annual Sub';

UPDATE users
SET subscription_type = 'Monthly'
WHERE subscription_type = 'Monthly Subscription';



-- fastn.migration: insert-plans

INSERT INTO subscription_plans (plan, price_id, amount, created_on)
VALUES ('Annual Sub', 'price_1OZVafE432GCeRPXuzc0DOnm', 50, 1719389577725201000);

INSERT INTO subscription_plans (plan, price_id, amount, created_on)
VALUES ('Monthly Subscription', 'price_1OZVafE432GCeRPX6Ly6yzjJ', 50, 1719389577725201000);


-- fastn.migration: fix-post-table

DROP TABLE posts;

CREATE TABLE posts (
  id INTEGER PRIMARY KEY,
  user_id INTEGER NOT NULL,
  post_content TEXT DEFAULT NULL,
  media_url TEXT DEFAULT NULL,
  created_on INTEGER NOT NULL
) STRICT;


-- fastn.migration: create-all-tables

CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY,
  mobile_number INTEGER UNIQUE NOT NULL,
  user_name TEXT NOT NULL,
  time_zone TEXT DEFAULT NULL,
  language TEXT DEFAULT NULL,
  subscription_type TEXT DEFAULT NULL,
  subscription_end_time TEXT DEFAULT NULL,
  customer_id TEXT DEFAULT NULL,
  access_token TEXT,
  created_on INTEGER NOT NULL,
  updated_on INTEGER NOT NULL
) STRICT;


CREATE TABLE IF NOT EXISTS posts (
  id INTEGER PRIMARY KEY,
  user_id INTEGER NOT NULL,
  post_content TEXT DEFAULT NULL,
  media_url TEXT DEFAULT NULL,
  created_on INTEGER NOT NULL
) STRICT;


CREATE TABLE IF NOT EXISTS subscription_plans (
  id INTEGER PRIMARY KEY,
  plan TEXT NOT NULL,
  price_id TEXT NOT NULL,
  amount REAL NOT NULL,
  created_on INTEGER NOT NULL
) STRICT;


CREATE TABLE IF NOT EXISTS subscriptions (
  id INTEGER PRIMARY KEY,
  user_id INTEGER NOT NULL,
  subscription_id TEXT NOT NULL,
  start_date TEXT NOT NULL,
  end_date TEXT NOT NULL,
  status TEXT DEFAULT NULL,
  is_active TEXT DEFAULT NULL,
  plan_type TEXT DEFAULT NULL,
  created_on INTEGER NOT NULL,
  updated_on INTEGER NOT NULL
) STRICT;


CREATE TABLE IF NOT EXISTS stripe_logs (
  id INTEGER PRIMARY KEY,
  event TEXT DEFAULT NULL,
  response TEXT DEFAULT NULL,
  created_on INTEGER NOT NULL
) STRICT;





-- fastn.migration: initial

CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY,
  mobile_number INTEGER UNIQUE NOT NULL,
  user_name TEXT NOT NULL,
  time_zone TEXT DEFAULT NULL,
  language TEXT DEFAULT NULL,
  subscription_type TEXT DEFAULT NULL,
  subscription_end_time TEXT DEFAULT NULL,
  customer_id TEXT DEFAULT NULL,
  access_token TEXT,
  created_on INTEGER NOT NULL,
  updated_on INTEGER NOT NULL
) STRICT;

